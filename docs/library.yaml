openapi: 3.0.3
servers:
  - url: https://api.library.com
info:
  title: Library Api
  description: Api de Biblioteca (Actividad de aprendizaje Javier Vizcaino 2ºDAM)
  version: "1.0"
tags:
  - name: Books
    description: Operaciones para realizar con los libros
  - name: Notice
    description: Operaciones para realizar con los avisos
  - name: Rents
    description: Operaciones para realizar con los alquileres
  - name: Stock
    description: Operaciones para realizar con el stock
  - name: User
    description: Operaciones para realizar con los usuarios
  - name: Library
    description: Operaciones para realizar con las librerias
paths:
  /books:
    get:
      tags:
        - Books
      summary: Lista de Libros
      description: Obtiene la informacion de todos los libros de la biblioteca
      operationId: getBooks
      parameters:
        - $ref: '#/components/parameters/hasStock'
        - $ref: '#/components/parameters/title'
      responses:
        '200':
          description: Se devuelve el listado de buses correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookInformation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Books
      summary: Registro de libros
      description: Registra un nuevo libro en la biblioteca
      operationId: postBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInformation'
      responses:
        '201':
          description: El libro se ha registrado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookOutDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/books/{bookId}':
    parameters:
      - $ref: '#/components/parameters/BookId'
    get:
      tags:
        - Books
      summary: Obtiene la informacion de un libro determinado
      description: Obtiene la informacion de un libro cuyo id se pasa en la URL
      operationId: getBook
      responses:
        '200':
          description: Se devuelve la informacion del bus
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BookInformation'
        '404':
          $ref: '#/components/responses/Notfound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Books
      summary: Da de baja un libro determinado
      description: Da de baja un libro cuyo id se pasa en la URL
      operationId: deleteBook
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/Notfound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    InternalServerError:
      type: object
      properties:
        code:
          type: string
          description: codigo de estado
          example: 500
        message:
          type: string
          description: Mensaje de error
          example: Internal Server Error

    BadRequest:
      type: object
      properties:
        code:
          type: string
          description: codigo de estado
          example: 400
        message:
          type: string
          description: Mensaje de error
          example: Error de validacion
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorField'

    ErrorField:
      type: object
      description: Error de validacion en un campo de entrada
      properties:
        fieldName:
          type: string
          description: El campo donde se ha producido el error
          example: title
        message:
          type: string
          description: Mensaje de error asociado con el campo
          example: title is obligatory

    NotFound:
      type: object
      properties:
        code:
          type: string
          description: codigo de estado
          example: 404
        message:
          type: string
          description: Mensaje de error
          example: Book not found

    BookOutDTO:
      type: object
      properties:
        id:
          type: integer
          description: Book ID
          example: 1
        title:
          type: string
          description: Titulo del libro
          example: Lord Of The Rings
        author:
          type: string
          description: Autor del libro
          example: J.R.R Tolkien
        description:
          type: string
          description: Descripcion del libro
          example: Libro de la trilogia LOTR
        genre:
          type: string
          description: Genero del libro
          example: Ciencia Ficcion
        hasStock:
          type: boolean
          description: Indica si el libro tiene o no Stock
          example: true


    BookInDTO:
      type: object
      properties:
        id:
          type: integer
          description: Book ID
          example: 1
        code:
          type: string
          description: Codigo del libro
          example: A1
        title:
          type: string
          description: Titulo del libro
          example: El señor de los anillos
        author:
          type: string
          description: Autor del libro
          example: J.R.R Tolkien
        genre:
          type: string
          description: Genero del libro
          example: Ciencia Ficcion
        hasStock:
          type: boolean
          description: Si tiene stock o no
          example: true

    BookInformation:
      type: object
      allOf:
        - $ref: '#/components/schemas/BookInDTO'
      properties:
        year:
          type: date
          description: Fecha de publicacion
          example: 15/03/2023
        pages:
          type: integer
          description: Paginas del libro
          example: 200
        price:
          type: integer
          description: Precio del libro
          example: 20

  responses:
    NoContent:
      description: No Content
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'

    Notfound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
          example:
            errorCode: 102
            message: "Producto no encontrado"
    UserNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            UserNotFound:
              value:
                errorCode: 102
                message: "Usuario no encontrado"
              description: No se localiza el usuario
            ProductNotFound:
              value:
                errorCode: 102
                message: "Producto no encontrado"
              description: No se localiza el producto

    BadRequest:
      description: Error de validacion
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'

  parameters:
    BookId:
      name: bookId
      in: path
      description: Código del libro
      required: true
      schema:
        type: number
        format: int64
    UserId:
      name: userId
      in: path
      description: Identificador de usuario
      required: true
      schema:
        type: number
        format: int64
    hasStock:
      name: hasStock
      in: query
      description: Indica si el libro tiene Stock
      required: false
      schema:
        type: boolean
        default: false
    title:
      name: title
      in: query
      description: Realiza un filtrado por el campo "titulo" y devuelve los resultados que contengan ese titulo.
      required: false
      schema:
        type: string
        default: Prueba

  requestBodies:
    BookInDTO:
      description: Los datos del nuevo libro
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BookInDTO'
